'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3643
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by wsdl, Version=2.0.50727.42.
'
Namespace EbiWS.EBeyeWs
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="EBISearchServiceSoapBinding", [Namespace]:="http://www.ebi.ac.uk/EBISearchService")>  _
    Partial Public Class EBISearchService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private getDomainsReferencedInDomainOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEntriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEntryFieldUrlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listFieldsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listFieldsInformationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDetailledNumberOfResultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getNumberOfResultsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReferencedEntriesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listAdditionalReferenceFieldsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getEntriesFieldUrlsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDomainsReferencedInEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReferencedEntriesFlatSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getResultsIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private listDomainsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getReferencedEntriesSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDomainsHierarchyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFacetsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAllResultsIdsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getResultsOperationCompleted As System.Threading.SendOrPostCallback
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://www.ebi.ac.uk/ebisearch/service.ebi/"
        End Sub
        
        '''<remarks/>
        Public Event getDomainsReferencedInDomainCompleted As getDomainsReferencedInDomainCompletedEventHandler
        
        '''<remarks/>
        Public Event getEntriesCompleted As getEntriesCompletedEventHandler
        
        '''<remarks/>
        Public Event getEntryFieldUrlsCompleted As getEntryFieldUrlsCompletedEventHandler
        
        '''<remarks/>
        Public Event listFieldsCompleted As listFieldsCompletedEventHandler
        
        '''<remarks/>
        Public Event listFieldsInformationCompleted As listFieldsInformationCompletedEventHandler
        
        '''<remarks/>
        Public Event getDetailledNumberOfResultsCompleted As getDetailledNumberOfResultsCompletedEventHandler
        
        '''<remarks/>
        Public Event getNumberOfResultsCompleted As getNumberOfResultsCompletedEventHandler
        
        '''<remarks/>
        Public Event getEntryCompleted As getEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event getReferencedEntriesCompleted As getReferencedEntriesCompletedEventHandler
        
        '''<remarks/>
        Public Event listAdditionalReferenceFieldsCompleted As listAdditionalReferenceFieldsCompletedEventHandler
        
        '''<remarks/>
        Public Event getEntriesFieldUrlsCompleted As getEntriesFieldUrlsCompletedEventHandler
        
        '''<remarks/>
        Public Event getDomainsReferencedInEntryCompleted As getDomainsReferencedInEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event getReferencedEntriesFlatSetCompleted As getReferencedEntriesFlatSetCompletedEventHandler
        
        '''<remarks/>
        Public Event getResultsIdsCompleted As getResultsIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event listDomainsCompleted As listDomainsCompletedEventHandler
        
        '''<remarks/>
        Public Event getReferencedEntriesSetCompleted As getReferencedEntriesSetCompletedEventHandler
        
        '''<remarks/>
        Public Event getDomainsHierarchyCompleted As getDomainsHierarchyCompletedEventHandler
        
        '''<remarks/>
        Public Event getFacetsCompleted As getFacetsCompletedEventHandler
        
        '''<remarks/>
        Public Event getAllResultsIdsCompleted As getAllResultsIdsCompletedEventHandler
        
        '''<remarks/>
        Public Event getResultsCompleted As getResultsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetDomainsReferencedInDomain", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDomainsReferencedInDomain(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainNames", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getDomainsReferencedInDomain", New Object() {domain})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetDomainsReferencedInDomain(ByVal domain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDomainsReferencedInDomain", New Object() {domain}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDomainsReferencedInDomain(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDomainsReferencedInDomainAsync(ByVal domain As String)
            Me.getDomainsReferencedInDomainAsync(domain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDomainsReferencedInDomainAsync(ByVal domain As String, ByVal userState As Object)
            If (Me.getDomainsReferencedInDomainOperationCompleted Is Nothing) Then
                Me.getDomainsReferencedInDomainOperationCompleted = AddressOf Me.OngetDomainsReferencedInDomainOperationCompleted
            End If
            Me.InvokeAsync("getDomainsReferencedInDomain", New Object() {domain}, Me.getDomainsReferencedInDomainOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDomainsReferencedInDomainOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDomainsReferencedInDomainCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDomainsReferencedInDomainCompleted(Me, New getDomainsReferencedInDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetEntries", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getEntries(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal entries() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfEntryValues", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> String()()
            Dim results() As Object = Me.Invoke("getEntries", New Object() {domain, entries, fields})
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Function BegingetEntries(ByVal domain As String, ByVal entries() As String, ByVal fields() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getEntries", New Object() {domain, entries, fields}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetEntries(ByVal asyncResult As System.IAsyncResult) As String()()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEntriesAsync(ByVal domain As String, ByVal entries() As String, ByVal fields() As String)
            Me.getEntriesAsync(domain, entries, fields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEntriesAsync(ByVal domain As String, ByVal entries() As String, ByVal fields() As String, ByVal userState As Object)
            If (Me.getEntriesOperationCompleted Is Nothing) Then
                Me.getEntriesOperationCompleted = AddressOf Me.OngetEntriesOperationCompleted
            End If
            Me.InvokeAsync("getEntries", New Object() {domain, entries, fields}, Me.getEntriesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEntriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEntriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEntriesCompleted(Me, New getEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetEntryFieldUrls", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getEntryFieldUrls(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal entry As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String) As <System.Xml.Serialization.XmlArrayAttribute("entryUrlsValues", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getEntryFieldUrls", New Object() {domain, entry, fields})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetEntryFieldUrls(ByVal domain As String, ByVal entry As String, ByVal fields() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getEntryFieldUrls", New Object() {domain, entry, fields}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetEntryFieldUrls(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEntryFieldUrlsAsync(ByVal domain As String, ByVal entry As String, ByVal fields() As String)
            Me.getEntryFieldUrlsAsync(domain, entry, fields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEntryFieldUrlsAsync(ByVal domain As String, ByVal entry As String, ByVal fields() As String, ByVal userState As Object)
            If (Me.getEntryFieldUrlsOperationCompleted Is Nothing) Then
                Me.getEntryFieldUrlsOperationCompleted = AddressOf Me.OngetEntryFieldUrlsOperationCompleted
            End If
            Me.InvokeAsync("getEntryFieldUrls", New Object() {domain, entry, fields}, Me.getEntryFieldUrlsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEntryFieldUrlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEntryFieldUrlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEntryFieldUrlsCompleted(Me, New getEntryFieldUrlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ListFields", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listFields(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfFieldNames", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("listFields", New Object() {domain})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginlistFields(ByVal domain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("listFields", New Object() {domain}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndlistFields(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub listFieldsAsync(ByVal domain As String)
            Me.listFieldsAsync(domain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listFieldsAsync(ByVal domain As String, ByVal userState As Object)
            If (Me.listFieldsOperationCompleted Is Nothing) Then
                Me.listFieldsOperationCompleted = AddressOf Me.OnlistFieldsOperationCompleted
            End If
            Me.InvokeAsync("listFields", New Object() {domain}, Me.listFieldsOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistFieldsOperationCompleted(ByVal arg As Object)
            If (Not (Me.listFieldsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listFieldsCompleted(Me, New listFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ListFieldsInformation", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listFieldsInformation(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfFieldInformation", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")> FieldInfo()
            Dim results() As Object = Me.Invoke("listFieldsInformation", New Object() {domain})
            Return CType(results(0),FieldInfo())
        End Function
        
        '''<remarks/>
        Public Function BeginlistFieldsInformation(ByVal domain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("listFieldsInformation", New Object() {domain}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndlistFieldsInformation(ByVal asyncResult As System.IAsyncResult) As FieldInfo()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),FieldInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub listFieldsInformationAsync(ByVal domain As String)
            Me.listFieldsInformationAsync(domain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listFieldsInformationAsync(ByVal domain As String, ByVal userState As Object)
            If (Me.listFieldsInformationOperationCompleted Is Nothing) Then
                Me.listFieldsInformationOperationCompleted = AddressOf Me.OnlistFieldsInformationOperationCompleted
            End If
            Me.InvokeAsync("listFieldsInformation", New Object() {domain}, Me.listFieldsInformationOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistFieldsInformationOperationCompleted(ByVal arg As Object)
            If (Not (Me.listFieldsInformationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listFieldsInformationCompleted(Me, New listFieldsInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetDetailledNumberOfResults", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDetailledNumberOfResults(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal query As String, ByVal flat As Boolean) As <System.Xml.Serialization.XmlElementAttribute("detailledNumberOfResults", IsNullable:=true)> DomainResult
            Dim results() As Object = Me.Invoke("getDetailledNumberOfResults", New Object() {domain, query, flat})
            Return CType(results(0),DomainResult)
        End Function
        
        '''<remarks/>
        Public Function BegingetDetailledNumberOfResults(ByVal domain As String, ByVal query As String, ByVal flat As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDetailledNumberOfResults", New Object() {domain, query, flat}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDetailledNumberOfResults(ByVal asyncResult As System.IAsyncResult) As DomainResult
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),DomainResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDetailledNumberOfResultsAsync(ByVal domain As String, ByVal query As String, ByVal flat As Boolean)
            Me.getDetailledNumberOfResultsAsync(domain, query, flat, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDetailledNumberOfResultsAsync(ByVal domain As String, ByVal query As String, ByVal flat As Boolean, ByVal userState As Object)
            If (Me.getDetailledNumberOfResultsOperationCompleted Is Nothing) Then
                Me.getDetailledNumberOfResultsOperationCompleted = AddressOf Me.OngetDetailledNumberOfResultsOperationCompleted
            End If
            Me.InvokeAsync("getDetailledNumberOfResults", New Object() {domain, query, flat}, Me.getDetailledNumberOfResultsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDetailledNumberOfResultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDetailledNumberOfResultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDetailledNumberOfResultsCompleted(Me, New getDetailledNumberOfResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetNumberOfResults", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getNumberOfResults(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal query As String) As <System.Xml.Serialization.XmlElementAttribute("numberOfResults")> Integer
            Dim results() As Object = Me.Invoke("getNumberOfResults", New Object() {domain, query})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BegingetNumberOfResults(ByVal domain As String, ByVal query As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getNumberOfResults", New Object() {domain, query}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetNumberOfResults(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getNumberOfResultsAsync(ByVal domain As String, ByVal query As String)
            Me.getNumberOfResultsAsync(domain, query, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getNumberOfResultsAsync(ByVal domain As String, ByVal query As String, ByVal userState As Object)
            If (Me.getNumberOfResultsOperationCompleted Is Nothing) Then
                Me.getNumberOfResultsOperationCompleted = AddressOf Me.OngetNumberOfResultsOperationCompleted
            End If
            Me.InvokeAsync("getNumberOfResults", New Object() {domain, query}, Me.getNumberOfResultsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetNumberOfResultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getNumberOfResultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getNumberOfResultsCompleted(Me, New getNumberOfResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetEntry", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getEntry(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal entry As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String) As <System.Xml.Serialization.XmlArrayAttribute("entryValues", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getEntry", New Object() {domain, entry, fields})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetEntry(ByVal domain As String, ByVal entry As String, ByVal fields() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getEntry", New Object() {domain, entry, fields}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetEntry(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEntryAsync(ByVal domain As String, ByVal entry As String, ByVal fields() As String)
            Me.getEntryAsync(domain, entry, fields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEntryAsync(ByVal domain As String, ByVal entry As String, ByVal fields() As String, ByVal userState As Object)
            If (Me.getEntryOperationCompleted Is Nothing) Then
                Me.getEntryOperationCompleted = AddressOf Me.OngetEntryOperationCompleted
            End If
            Me.InvokeAsync("getEntry", New Object() {domain, entry, fields}, Me.getEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEntryCompleted(Me, New getEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetReferencedEntries", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getReferencedEntries(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal entry As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal referencedDomain As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfEntryIds", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getReferencedEntries", New Object() {domain, entry, referencedDomain})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetReferencedEntries(ByVal domain As String, ByVal entry As String, ByVal referencedDomain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getReferencedEntries", New Object() {domain, entry, referencedDomain}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetReferencedEntries(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReferencedEntriesAsync(ByVal domain As String, ByVal entry As String, ByVal referencedDomain As String)
            Me.getReferencedEntriesAsync(domain, entry, referencedDomain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReferencedEntriesAsync(ByVal domain As String, ByVal entry As String, ByVal referencedDomain As String, ByVal userState As Object)
            If (Me.getReferencedEntriesOperationCompleted Is Nothing) Then
                Me.getReferencedEntriesOperationCompleted = AddressOf Me.OngetReferencedEntriesOperationCompleted
            End If
            Me.InvokeAsync("getReferencedEntries", New Object() {domain, entry, referencedDomain}, Me.getReferencedEntriesOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReferencedEntriesOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReferencedEntriesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReferencedEntriesCompleted(Me, New getReferencedEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ListAdditionalReferenceFields", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listAdditionalReferenceFields(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfFieldNames", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("listAdditionalReferenceFields", New Object() {domain})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginlistAdditionalReferenceFields(ByVal domain As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("listAdditionalReferenceFields", New Object() {domain}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndlistAdditionalReferenceFields(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub listAdditionalReferenceFieldsAsync(ByVal domain As String)
            Me.listAdditionalReferenceFieldsAsync(domain, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listAdditionalReferenceFieldsAsync(ByVal domain As String, ByVal userState As Object)
            If (Me.listAdditionalReferenceFieldsOperationCompleted Is Nothing) Then
                Me.listAdditionalReferenceFieldsOperationCompleted = AddressOf Me.OnlistAdditionalReferenceFieldsOperationCompleted
            End If
            Me.InvokeAsync("listAdditionalReferenceFields", New Object() {domain}, Me.listAdditionalReferenceFieldsOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistAdditionalReferenceFieldsOperationCompleted(ByVal arg As Object)
            If (Not (Me.listAdditionalReferenceFieldsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listAdditionalReferenceFieldsCompleted(Me, New listAdditionalReferenceFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetEntriesFieldUrls", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getEntriesFieldUrls(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal entries() As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfEntryUrlsValues", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> String()()
            Dim results() As Object = Me.Invoke("getEntriesFieldUrls", New Object() {domain, entries, fields})
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Function BegingetEntriesFieldUrls(ByVal domain As String, ByVal entries() As String, ByVal fields() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getEntriesFieldUrls", New Object() {domain, entries, fields}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetEntriesFieldUrls(ByVal asyncResult As System.IAsyncResult) As String()()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getEntriesFieldUrlsAsync(ByVal domain As String, ByVal entries() As String, ByVal fields() As String)
            Me.getEntriesFieldUrlsAsync(domain, entries, fields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getEntriesFieldUrlsAsync(ByVal domain As String, ByVal entries() As String, ByVal fields() As String, ByVal userState As Object)
            If (Me.getEntriesFieldUrlsOperationCompleted Is Nothing) Then
                Me.getEntriesFieldUrlsOperationCompleted = AddressOf Me.OngetEntriesFieldUrlsOperationCompleted
            End If
            Me.InvokeAsync("getEntriesFieldUrls", New Object() {domain, entries, fields}, Me.getEntriesFieldUrlsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetEntriesFieldUrlsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getEntriesFieldUrlsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getEntriesFieldUrlsCompleted(Me, New getEntriesFieldUrlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetDomainsReferencedInEntry", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDomainsReferencedInEntry(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal entry As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainNames", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getDomainsReferencedInEntry", New Object() {domain, entry})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetDomainsReferencedInEntry(ByVal domain As String, ByVal entry As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDomainsReferencedInEntry", New Object() {domain, entry}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDomainsReferencedInEntry(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDomainsReferencedInEntryAsync(ByVal domain As String, ByVal entry As String)
            Me.getDomainsReferencedInEntryAsync(domain, entry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDomainsReferencedInEntryAsync(ByVal domain As String, ByVal entry As String, ByVal userState As Object)
            If (Me.getDomainsReferencedInEntryOperationCompleted Is Nothing) Then
                Me.getDomainsReferencedInEntryOperationCompleted = AddressOf Me.OngetDomainsReferencedInEntryOperationCompleted
            End If
            Me.InvokeAsync("getDomainsReferencedInEntry", New Object() {domain, entry}, Me.getDomainsReferencedInEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDomainsReferencedInEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDomainsReferencedInEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDomainsReferencedInEntryCompleted(Me, New getDomainsReferencedInEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetReferencedEntriesFlatSet", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getReferencedEntriesFlatSet(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal entries() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal referencedDomain As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfEntryValues", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> String()()
            Dim results() As Object = Me.Invoke("getReferencedEntriesFlatSet", New Object() {domain, entries, referencedDomain, fields})
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Function BegingetReferencedEntriesFlatSet(ByVal domain As String, ByVal entries() As String, ByVal referencedDomain As String, ByVal fields() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getReferencedEntriesFlatSet", New Object() {domain, entries, referencedDomain, fields}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetReferencedEntriesFlatSet(ByVal asyncResult As System.IAsyncResult) As String()()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReferencedEntriesFlatSetAsync(ByVal domain As String, ByVal entries() As String, ByVal referencedDomain As String, ByVal fields() As String)
            Me.getReferencedEntriesFlatSetAsync(domain, entries, referencedDomain, fields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReferencedEntriesFlatSetAsync(ByVal domain As String, ByVal entries() As String, ByVal referencedDomain As String, ByVal fields() As String, ByVal userState As Object)
            If (Me.getReferencedEntriesFlatSetOperationCompleted Is Nothing) Then
                Me.getReferencedEntriesFlatSetOperationCompleted = AddressOf Me.OngetReferencedEntriesFlatSetOperationCompleted
            End If
            Me.InvokeAsync("getReferencedEntriesFlatSet", New Object() {domain, entries, referencedDomain, fields}, Me.getReferencedEntriesFlatSetOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReferencedEntriesFlatSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReferencedEntriesFlatSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReferencedEntriesFlatSetCompleted(Me, New getReferencedEntriesFlatSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetResultsIds", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getResultsIds(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal query As String, ByVal start As Integer, ByVal size As Integer) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfIds", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getResultsIds", New Object() {domain, query, start, size})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetResultsIds(ByVal domain As String, ByVal query As String, ByVal start As Integer, ByVal size As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getResultsIds", New Object() {domain, query, start, size}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetResultsIds(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getResultsIdsAsync(ByVal domain As String, ByVal query As String, ByVal start As Integer, ByVal size As Integer)
            Me.getResultsIdsAsync(domain, query, start, size, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getResultsIdsAsync(ByVal domain As String, ByVal query As String, ByVal start As Integer, ByVal size As Integer, ByVal userState As Object)
            If (Me.getResultsIdsOperationCompleted Is Nothing) Then
                Me.getResultsIdsOperationCompleted = AddressOf Me.OngetResultsIdsOperationCompleted
            End If
            Me.InvokeAsync("getResultsIds", New Object() {domain, query, start, size}, Me.getResultsIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetResultsIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getResultsIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getResultsIdsCompleted(Me, New getResultsIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ListDomains", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function listDomains() As <System.Xml.Serialization.XmlArrayAttribute("arrayOfDomainNames", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("listDomains", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginlistDomains(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("listDomains", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndlistDomains(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub listDomainsAsync()
            Me.listDomainsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub listDomainsAsync(ByVal userState As Object)
            If (Me.listDomainsOperationCompleted Is Nothing) Then
                Me.listDomainsOperationCompleted = AddressOf Me.OnlistDomainsOperationCompleted
            End If
            Me.InvokeAsync("listDomains", New Object(-1) {}, Me.listDomainsOperationCompleted, userState)
        End Sub
        
        Private Sub OnlistDomainsOperationCompleted(ByVal arg As Object)
            If (Not (Me.listDomainsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent listDomainsCompleted(Me, New listDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetReferencedEntriesSet", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getReferencedEntriesSet(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal entries() As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal referencedDomain As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfEntryValues", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")> EntryReferences()
            Dim results() As Object = Me.Invoke("getReferencedEntriesSet", New Object() {domain, entries, referencedDomain, fields})
            Return CType(results(0),EntryReferences())
        End Function
        
        '''<remarks/>
        Public Function BegingetReferencedEntriesSet(ByVal domain As String, ByVal entries() As String, ByVal referencedDomain As String, ByVal fields() As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getReferencedEntriesSet", New Object() {domain, entries, referencedDomain, fields}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetReferencedEntriesSet(ByVal asyncResult As System.IAsyncResult) As EntryReferences()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),EntryReferences())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getReferencedEntriesSetAsync(ByVal domain As String, ByVal entries() As String, ByVal referencedDomain As String, ByVal fields() As String)
            Me.getReferencedEntriesSetAsync(domain, entries, referencedDomain, fields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getReferencedEntriesSetAsync(ByVal domain As String, ByVal entries() As String, ByVal referencedDomain As String, ByVal fields() As String, ByVal userState As Object)
            If (Me.getReferencedEntriesSetOperationCompleted Is Nothing) Then
                Me.getReferencedEntriesSetOperationCompleted = AddressOf Me.OngetReferencedEntriesSetOperationCompleted
            End If
            Me.InvokeAsync("getReferencedEntriesSet", New Object() {domain, entries, referencedDomain, fields}, Me.getReferencedEntriesSetOperationCompleted, userState)
        End Sub
        
        Private Sub OngetReferencedEntriesSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.getReferencedEntriesSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getReferencedEntriesSetCompleted(Me, New getReferencedEntriesSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetDomainsHierarchy", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDomainsHierarchy() As <System.Xml.Serialization.XmlElementAttribute("rootDomain", IsNullable:=true)> DomainDescription
            Dim results() As Object = Me.Invoke("getDomainsHierarchy", New Object(-1) {})
            Return CType(results(0),DomainDescription)
        End Function
        
        '''<remarks/>
        Public Function BegingetDomainsHierarchy(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getDomainsHierarchy", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetDomainsHierarchy(ByVal asyncResult As System.IAsyncResult) As DomainDescription
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),DomainDescription)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDomainsHierarchyAsync()
            Me.getDomainsHierarchyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDomainsHierarchyAsync(ByVal userState As Object)
            If (Me.getDomainsHierarchyOperationCompleted Is Nothing) Then
                Me.getDomainsHierarchyOperationCompleted = AddressOf Me.OngetDomainsHierarchyOperationCompleted
            End If
            Me.InvokeAsync("getDomainsHierarchy", New Object(-1) {}, Me.getDomainsHierarchyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDomainsHierarchyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDomainsHierarchyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDomainsHierarchyCompleted(Me, New getDomainsHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetFacets", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFacets(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal query As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfFacets", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")> Facet()
            Dim results() As Object = Me.Invoke("getFacets", New Object() {domain, query})
            Return CType(results(0),Facet())
        End Function
        
        '''<remarks/>
        Public Function BegingetFacets(ByVal domain As String, ByVal query As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getFacets", New Object() {domain, query}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetFacets(ByVal asyncResult As System.IAsyncResult) As Facet()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Facet())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFacetsAsync(ByVal domain As String, ByVal query As String)
            Me.getFacetsAsync(domain, query, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFacetsAsync(ByVal domain As String, ByVal query As String, ByVal userState As Object)
            If (Me.getFacetsOperationCompleted Is Nothing) Then
                Me.getFacetsOperationCompleted = AddressOf Me.OngetFacetsOperationCompleted
            End If
            Me.InvokeAsync("getFacets", New Object() {domain, query}, Me.getFacetsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFacetsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFacetsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFacetsCompleted(Me, New getFacetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetAllResultsIds", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAllResultsIds(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal query As String) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfIds", IsNullable:=true)> String()
            Dim results() As Object = Me.Invoke("getAllResultsIds", New Object() {domain, query})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BegingetAllResultsIds(ByVal domain As String, ByVal query As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getAllResultsIds", New Object() {domain, query}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetAllResultsIds(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAllResultsIdsAsync(ByVal domain As String, ByVal query As String)
            Me.getAllResultsIdsAsync(domain, query, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAllResultsIdsAsync(ByVal domain As String, ByVal query As String, ByVal userState As Object)
            If (Me.getAllResultsIdsOperationCompleted Is Nothing) Then
                Me.getAllResultsIdsOperationCompleted = AddressOf Me.OngetAllResultsIdsOperationCompleted
            End If
            Me.InvokeAsync("getAllResultsIds", New Object() {domain, query}, Me.getAllResultsIdsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAllResultsIdsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAllResultsIdsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAllResultsIdsCompleted(Me, New getAllResultsIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetResults", RequestNamespace:="http://www.ebi.ac.uk/EBISearchService", ResponseNamespace:="http://www.ebi.ac.uk/EBISearchService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getResults(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal domain As String, <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal query As String, <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)> ByVal fields() As String, ByVal start As Integer, ByVal size As Integer) As <System.Xml.Serialization.XmlArrayAttribute("arrayOfEntryValues", IsNullable:=true), System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> String()()
            Dim results() As Object = Me.Invoke("getResults", New Object() {domain, query, fields, start, size})
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Function BegingetResults(ByVal domain As String, ByVal query As String, ByVal fields() As String, ByVal start As Integer, ByVal size As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("getResults", New Object() {domain, query, fields, start, size}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndgetResults(ByVal asyncResult As System.IAsyncResult) As String()()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub getResultsAsync(ByVal domain As String, ByVal query As String, ByVal fields() As String, ByVal start As Integer, ByVal size As Integer)
            Me.getResultsAsync(domain, query, fields, start, size, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getResultsAsync(ByVal domain As String, ByVal query As String, ByVal fields() As String, ByVal start As Integer, ByVal size As Integer, ByVal userState As Object)
            If (Me.getResultsOperationCompleted Is Nothing) Then
                Me.getResultsOperationCompleted = AddressOf Me.OngetResultsOperationCompleted
            End If
            Me.InvokeAsync("getResults", New Object() {domain, query, fields, start, size}, Me.getResultsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetResultsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getResultsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getResultsCompleted(Me, New getResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")>  _
    Partial Public Class FieldInfo
        
        Private descriptionField As String
        
        Private idField As String
        
        Private nameField As String
        
        Private retrievableField As Boolean
        
        Private retrievableFieldSpecified As Boolean
        
        Private searchableField As Boolean
        
        Private searchableFieldSpecified As Boolean
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property retrievable() As Boolean
            Get
                Return Me.retrievableField
            End Get
            Set
                Me.retrievableField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property retrievableSpecified() As Boolean
            Get
                Return Me.retrievableFieldSpecified
            End Get
            Set
                Me.retrievableFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property searchable() As Boolean
            Get
                Return Me.searchableField
            End Get
            Set
                Me.searchableField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property searchableSpecified() As Boolean
            Get
                Return Me.searchableFieldSpecified
            End Get
            Set
                Me.searchableFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")>  _
    Partial Public Class FacetValue
        
        Private labelField As String
        
        Private valueField As String
        
        Private hitCountField As Integer
        
        Private hitCountFieldSpecified As Boolean
        
        '''<remarks/>
        Public Property label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property hitCount() As Integer
            Get
                Return Me.hitCountField
            End Get
            Set
                Me.hitCountField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property hitCountSpecified() As Boolean
            Get
                Return Me.hitCountFieldSpecified
            End Get
            Set
                Me.hitCountFieldSpecified = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")>  _
    Partial Public Class Facet
        
        Private idField As String
        
        Private labelField As String
        
        Private facetValuesField() As FacetValue
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property label() As String
            Get
                Return Me.labelField
            End Get
            Set
                Me.labelField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property facetValues() As FacetValue()
            Get
                Return Me.facetValuesField
            End Get
            Set
                Me.facetValuesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")>  _
    Partial Public Class DomainDescription
        
        Private descriptionField As String
        
        Private idField As String
        
        Private nameField As String
        
        Private propertiesField() As anyType2anyType2anyTypeMapMapEntry
        
        Private subDomainsField() As DomainDescription
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property id() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("entry", [Namespace]:="http://www.ebi.ac.uk/EBISearchService")>  _
        Public Property properties() As anyType2anyType2anyTypeMapMapEntry()
            Get
                Return Me.propertiesField
            End Get
            Set
                Me.propertiesField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property subDomains() As DomainDescription()
            Get
                Return Me.subDomainsField
            End Get
            Set
                Me.subDomainsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://www.ebi.ac.uk/EBISearchService")>  _
    Partial Public Class anyType2anyType2anyTypeMapMapEntry
        
        Private keyField As Object
        
        Private valueField() As anyType2anyTypeMapEntry
        
        '''<remarks/>
        Public Property key() As Object
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayItemAttribute("entry")>  _
        Public Property value() As anyType2anyTypeMapEntry()
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=true, [Namespace]:="http://www.ebi.ac.uk/EBISearchService")>  _
    Partial Public Class anyType2anyTypeMapEntry
        
        Private keyField As Object
        
        Private valueField As Object
        
        '''<remarks/>
        Public Property key() As Object
            Get
                Return Me.keyField
            End Get
            Set
                Me.keyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property value() As Object
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")>  _
    Partial Public Class EntryReferences
        
        Private entryField As String
        
        Private referencesField()() As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property entry() As String
            Get
                Return Me.entryField
            End Get
            Set
                Me.entryField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true),  _
         System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString", [Namespace]:="http://www.ebi.ac.uk/EBISearchService"),  _
         System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="http://www.ebi.ac.uk/EBISearchService", NestingLevel:=1)>  _
        Public Property references() As String()()
            Get
                Return Me.referencesField
            End Get
            Set
                Me.referencesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://webservice.ebinocle.ebi.ac.uk")>  _
    Partial Public Class DomainResult
        
        Private domainIdField As String
        
        Private numberOfResultsField As Integer
        
        Private numberOfResultsFieldSpecified As Boolean
        
        Private subDomainsResultsField() As DomainResult
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property domainId() As String
            Get
                Return Me.domainIdField
            End Get
            Set
                Me.domainIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property numberOfResults() As Integer
            Get
                Return Me.numberOfResultsField
            End Get
            Set
                Me.numberOfResultsField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlIgnoreAttribute()>  _
        Public Property numberOfResultsSpecified() As Boolean
            Get
                Return Me.numberOfResultsFieldSpecified
            End Get
            Set
                Me.numberOfResultsFieldSpecified = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlArrayAttribute(IsNullable:=true)>  _
        Public Property subDomainsResults() As DomainResult()
            Get
                Return Me.subDomainsResultsField
            End Get
            Set
                Me.subDomainsResultsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDomainsReferencedInDomainCompletedEventHandler(ByVal sender As Object, ByVal e As getDomainsReferencedInDomainCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDomainsReferencedInDomainCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getEntriesCompletedEventHandler(ByVal sender As Object, ByVal e As getEntriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEntriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getEntryFieldUrlsCompletedEventHandler(ByVal sender As Object, ByVal e As getEntryFieldUrlsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEntryFieldUrlsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub listFieldsCompletedEventHandler(ByVal sender As Object, ByVal e As listFieldsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listFieldsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub listFieldsInformationCompletedEventHandler(ByVal sender As Object, ByVal e As listFieldsInformationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listFieldsInformationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As FieldInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),FieldInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDetailledNumberOfResultsCompletedEventHandler(ByVal sender As Object, ByVal e As getDetailledNumberOfResultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDetailledNumberOfResultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getNumberOfResultsCompletedEventHandler(ByVal sender As Object, ByVal e As getNumberOfResultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getNumberOfResultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getEntryCompletedEventHandler(ByVal sender As Object, ByVal e As getEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getReferencedEntriesCompletedEventHandler(ByVal sender As Object, ByVal e As getReferencedEntriesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReferencedEntriesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub listAdditionalReferenceFieldsCompletedEventHandler(ByVal sender As Object, ByVal e As listAdditionalReferenceFieldsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listAdditionalReferenceFieldsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getEntriesFieldUrlsCompletedEventHandler(ByVal sender As Object, ByVal e As getEntriesFieldUrlsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getEntriesFieldUrlsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDomainsReferencedInEntryCompletedEventHandler(ByVal sender As Object, ByVal e As getDomainsReferencedInEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDomainsReferencedInEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getReferencedEntriesFlatSetCompletedEventHandler(ByVal sender As Object, ByVal e As getReferencedEntriesFlatSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReferencedEntriesFlatSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getResultsIdsCompletedEventHandler(ByVal sender As Object, ByVal e As getResultsIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getResultsIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub listDomainsCompletedEventHandler(ByVal sender As Object, ByVal e As listDomainsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class listDomainsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getReferencedEntriesSetCompletedEventHandler(ByVal sender As Object, ByVal e As getReferencedEntriesSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getReferencedEntriesSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As EntryReferences()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),EntryReferences())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getDomainsHierarchyCompletedEventHandler(ByVal sender As Object, ByVal e As getDomainsHierarchyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDomainsHierarchyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DomainDescription
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DomainDescription)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getFacetsCompletedEventHandler(ByVal sender As Object, ByVal e As getFacetsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFacetsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Facet()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Facet())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getAllResultsIdsCompletedEventHandler(ByVal sender As Object, ByVal e As getAllResultsIdsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAllResultsIdsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")>  _
    Public Delegate Sub getResultsCompletedEventHandler(ByVal sender As Object, ByVal e As getResultsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getResultsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String()())
            End Get
        End Property
    End Class
End Namespace
